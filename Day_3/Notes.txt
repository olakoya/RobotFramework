Operators and Control Flow in Robot Framework
---------------------------------------------
Operators
---------
1. Arithmetic
2. Comparison
3. Logical
4. Identity
5. Membership
Above are commonly use operators
Commands to run the outputs are
1. ==> robot Day_3/operators.robot
2. ==> robot -d Results Day_3/operators.robot


EXERCISES AND OUTPUTS
----------------------
1. Arithmetric Operators
*** Variables ***
${var1}      5
${var2}      3
${list}     [1,2,3,4,5]
${string}       Hello

*** Test Cases ***
Arithmetric Operators
    ${sum}      Evaluate    ${var1}+${var2}
    Log To Console    ${sum} # Log to console it's like print in python

OUTPUT
(.venv) olakoya@MacBookPro RobotFramework % robot Day_3/operators.robot
==============================================================================
Operators
==============================================================================
Arithmetric Operators                                                 .8
Arithmetric Operators                                                 | PASS |
------------------------------------------------------------------------------
Operators                                                             | PASS |
1 test, 1 passed, 0 failed
==============================================================================
Output:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/output.xml
Log:     /Users/olakoya/Desktop/PythonProjects/RobotFramework/log.html
Report:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/report.html

2. Comparison Operators
    ${result}      Evaluate    ${var1}==${var2}
    Log To Console    ${result}

OUTPUT
(.venv) olakoya@MacBookPro RobotFramework % robot -d Results Day_3/operators.robot
==============================================================================
Operators
==============================================================================
1. Arithmetric Operators                                              .8
1. Arithmetric Operators                                              | PASS |
------------------------------------------------------------------------------
2. Comparison Operators                                               .False
2. Comparison Operators                                               | PASS |
------------------------------------------------------------------------------
Operators                                                             | PASS |
2 tests, 2 passed, 0 failed
==============================================================================
Output:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/output.xml
Log:     /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/log.html
Report:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/report.html

3. Logical Operators
    ${result}      Evaluate    True and False
    Log To Console    ${result}

OUTPUT
------------------------------------------------------------------------------
3. Logical Operators                                                  .False
3. Logical Operators                                                  | PASS |
------------------------------------------------------------------------------
Operators                                                             | PASS |
3 tests, 3 passed, 0 failed
==============================================================================
Output:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/output.xml
Log:     /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/log.html
Report:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/report.html
(.venv) olakoya@MacBookPro RobotFramework %

4. Membership Operators
    ${result}      Evaluate    3 in ${list}
    Log To Console    ${result}

OUTPUT
------------------------------------------------------------------------------
4. Membership Operators                                               .True
4. Membership Operators                                               | PASS |
------------------------------------------------------------------------------
Operators                                                             | PASS |
4 tests, 4 passed, 0 failed
==============================================================================
Output:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/output.xml
Log:     /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/log.html
Report:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/report.html

TO WORK WITH EVALUATE KEYWORD ONE NEEDS THE OPERATORS
Evaluate keyword is to evaluates given expression in python and returns the result.


Control Flow
------------
Flow control describes the order in which statements will be executed at runtime.

1. Conditional Control flow
EXERCISE

*** Test Cases ***
Simple If/Else
    ${rc}       Set Variable        1

    IF          ${rc}>0
            Log To Console         Positive
    ELSE IF     ${rc}<0
            Log To Console         Negative
    ELSE
            Log To Console         Zero
    END

OUTPUT
(.venv) olakoya@MacBookPro RobotFramework % robot -d Results Day_3/control_flow.robot
==============================================================================
Control Flow
==============================================================================
Simple If/Else                                                        .Positive
Simple If/Else                                                        | PASS |
------------------------------------------------------------------------------
Control Flow                                                          | PASS |
1 test, 1 passed, 0 failed
==============================================================================
Output:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/output.xml
Log:     /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/log.html
Report:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/report.html

Simple If/Else
    ${rc}       Set Variable        -1

    IF          ${rc}>0
            Log To Console         Positive
    ELSE IF     ${rc}<0
            Log To Console         Negative
    ELSE
            Log To Console         Zero
    END

OUTPUT
(.venv) olakoya@MacBookPro RobotFramework % robot -d Results Day_3/control_flow.robot
==============================================================================
Control Flow
==============================================================================
Simple If/Else                                                        .Negative
Simple If/Else                                                        | PASS |
------------------------------------------------------------------------------
Control Flow                                                          | PASS |
1 test, 1 passed, 0 failed
==============================================================================
Output:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/output.xml
Log:     /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/log.html
Report:  /Users/olakoya/Desktop/PythonProjects/RobotFramework/Results/report.html

2. Looping control flow
3. Error Handling control flow


While Loop
-----------
Initialisation
Condition
Increment/decrement

Transfer Keywords
-----------------
BREAK
------
We can use BREAK statement inside loops to break loop execution based on some condition.


CONTINUE
---------
We can use the CONTINUE statement to skip the current iteration and continue the next iteration based on some condition.

