Introduction to Robot Framework
----------------------------------
Robot Framework is a Python based, and extensible keyword driven automation framework
	- Acceptance testing
	- Acceptance test driven development (ATDD)
	- Behavior driven development (BDD)
	- Robotic process automation (RPA)

Why Robot Framework?
--------------------
Robot Framework uses tabular syntax for uniform test cases and supports data-driven testing with built-in variables.
It enables reusable keywords, tagging for test selection, and modular testing for diverse interfaces.
It is platform-independent, supports testing various applications, and integrates with CI systems via XML output.
It offers HTML logs, Python-based custom libraries, and versioning-friendly test suites.
It provides setup/teardown at all levels and supports practical testing in multiple environments.

Architecture of robot framework
-------------------------------
Robot Framework has a different Test Libraries
The libraries can be found here ==> https://robotframework.org/
Builtin Standard Libraries

In case this a new project on the system the below requirements libraries need to be installed

Requirements
-------------
1. python --version
2. pip --version
3. pip install selenium or pip uninstall selenium
4. Pip install robotframework or Pip uninstall robotframework
5. Pip install --upgrade robotframework
6. Pip install robotframework == 2.9.2
7. Pip list
8. pip show robotframework
9. Pip check robotframework
10. Pip install robotframework-seleniumlibrary
11. Pip uninstall robotframework-seleniumlibrary

To install all create, a requirements.txt file and enter the libraries/packages without adding pip install, uninstall in front of the libraries
Afterwards, use cmd ==> pip install -r requirements.txt to automatically install all together than install it individually
Then ==> pip list to verify the libraries installed

Install packages
install plugin

This cmd activate virtual environment (venv) in the project ==> source venv/bin/activate

Advantages of Robot Framework
-------------------------------
Open-source, operating system independent.
Extends support for web, device, api and database automation.
No much programming is required.
Excellent reporting, support CI, parallel execution, remote execution.
Robot Framework is case-insensitive

driver.get()

open browser
OPEN BROWSER
Open Browser
Open browser


Disadvantages of Robot Framework
--------------------------------
Hard to maintain.
Difficult to customize HTML reports
Difficult to debug Errors.
Strict Indentation rules.

Test Suite or Test Case file
----------------------------
A Test Suite or Test Case file is a collection of test cases.
Test case contains test name and test steps.
A test suite can be saved as
	.robot (plain text format â‡’ space and pipe separated)
	.robot.rst (reStructuredText format)
	.rbt (JSON format)


Keywords ==> functions (Builtin and userdefined function)

resouces.robot ==> userdefined function

robot -v Browser:firefox -d Results Day1\FirstTestCase.robot

robot --variable Browser:edge --outputdir Results Day1\FirstTestCase.robot
